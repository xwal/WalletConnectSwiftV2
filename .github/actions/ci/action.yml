name: 'ci'
description: 'Executes Swift specific CI steps'
inputs:
  type:
    description: 'The type of CI step to run'
    required: true
  relay-endpoint:
    description: 'The endpoint of the relay e.g. relay.walletconnect.com'
    required: false
    default: 'relay.walletconnect.com'
  project-id:
    description: 'WalletConnect project id'
    required: true

runs:
  using: "composite"
  steps:
    # Package builds
    - name: Run tests
      if: inputs.type == 'unit-tests'
      shell: bash
      run: make unit_tests

    # Integration tests
    - name: Run integration tests
      if: inputs.type == 'integration-tests'
      shell: bash
      env:
        RELAY_ENDPOINT: ${{ inputs.relay-endpoint }}
        PROJECT_ID: ${{ inputs.project-id }}
      run: make integration_tests RELAY_HOST=$RELAY_ENDPOINT PROJECT_ID=$PROJECT_ID

    # Relay Integration tests
    - name: Run integration tests
      if: inputs.type == 'relay-tests'
      shell: bash
      env:
        RELAY_ENDPOINT: ${{ inputs.relay-endpoint }}
        PROJECT_ID: ${{ inputs.project-id }}
      run: make relay_tests RELAY_HOST=$RELAY_ENDPOINT PROJECT_ID=$PROJECT_ID

    # Smoke tests
    - name: Run smoke tests
      if: inputs.type == 'smoke-tests'
      shell: bash
      env:
        RELAY_ENDPOINT: ${{ inputs.relay-endpoint }}
        PROJECT_ID: ${{ inputs.project-id }}
      run: make smoke_tests RELAY_HOST=$RELAY_ENDPOINT PROJECT_ID=$PROJECT_ID

    # Wallet build
    - name: Build Example Wallet
      if: inputs.type == 'build-example-wallet'
      shell: bash
      run: make build_wallet

    # DApp build
    - name: Build Example Dapp
      if: inputs.type == 'build-example-dapp'
      shell: bash
      run: make build_dapp

    # UI tests
    - name: UI Tests
      if: inputs.type == 'ui-tests'
      shell: bash
      run: make ui_tests
      continue-on-error: true
